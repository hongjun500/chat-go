// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: envelope.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Encoding 表示消息负载的编码方式
type Encoding int32

const (
	Encoding_ENCODING_UNSPECIFIED Encoding = 0
	Encoding_ENCODING_JSON        Encoding = 1
	Encoding_ENCODING_PROTOBUF    Encoding = 2
	Encoding_ENCODING_BINARY      Encoding = 3 // 保留扩展
)

// Enum value maps for Encoding.
var (
	Encoding_name = map[int32]string{
		0: "ENCODING_UNSPECIFIED",
		1: "ENCODING_JSON",
		2: "ENCODING_PROTOBUF",
		3: "ENCODING_BINARY",
	}
	Encoding_value = map[string]int32{
		"ENCODING_UNSPECIFIED": 0,
		"ENCODING_JSON":        1,
		"ENCODING_PROTOBUF":    2,
		"ENCODING_BINARY":      3,
	}
)

func (x Encoding) Enum() *Encoding {
	p := new(Encoding)
	*p = x
	return p
}

func (x Encoding) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Encoding) Descriptor() protoreflect.EnumDescriptor {
	return file_envelope_proto_enumTypes[0].Descriptor()
}

func (Encoding) Type() protoreflect.EnumType {
	return &file_envelope_proto_enumTypes[0]
}

func (x Encoding) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Encoding.Descriptor instead.
func (Encoding) EnumDescriptor() ([]byte, []int) {
	return file_envelope_proto_rawDescGZIP(), []int{0}
}

// MessageType 表示系统支持的业务消息类型
type MessageType int32

const (
	MessageType_MSG_TYPE_UNSPECIFIED MessageType = 0
	MessageType_MSG_TYPE_TEXT        MessageType = 1
	MessageType_MSG_TYPE_COMMAND     MessageType = 2
	MessageType_MSG_TYPE_FILE_META   MessageType = 3
	MessageType_MSG_TYPE_FILE_CHUNK  MessageType = 4
	MessageType_MSG_TYPE_ACK         MessageType = 5
	MessageType_MSG_TYPE_PING        MessageType = 6
	MessageType_MSG_TYPE_PONG        MessageType = 7
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "MSG_TYPE_UNSPECIFIED",
		1: "MSG_TYPE_TEXT",
		2: "MSG_TYPE_COMMAND",
		3: "MSG_TYPE_FILE_META",
		4: "MSG_TYPE_FILE_CHUNK",
		5: "MSG_TYPE_ACK",
		6: "MSG_TYPE_PING",
		7: "MSG_TYPE_PONG",
	}
	MessageType_value = map[string]int32{
		"MSG_TYPE_UNSPECIFIED": 0,
		"MSG_TYPE_TEXT":        1,
		"MSG_TYPE_COMMAND":     2,
		"MSG_TYPE_FILE_META":   3,
		"MSG_TYPE_FILE_CHUNK":  4,
		"MSG_TYPE_ACK":         5,
		"MSG_TYPE_PING":        6,
		"MSG_TYPE_PONG":        7,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_envelope_proto_enumTypes[1].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_envelope_proto_enumTypes[1]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_envelope_proto_rawDescGZIP(), []int{1}
}

// Envelope 定义分布式聊天系统的消息协议
type Envelope struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ---- 协议元信息 ----
	Version  string      `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`                     // 协议版本
	Type     MessageType `protobuf:"varint,2,opt,name=type,proto3,enum=pb.MessageType" json:"type,omitempty"`      // 消息类型
	Encoding Encoding    `protobuf:"varint,3,opt,name=encoding,proto3,enum=pb.Encoding" json:"encoding,omitempty"` // payload 编码方式
	// ---- 路由与可靠性 ----
	MessageId     string `protobuf:"bytes,4,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`             // 消息唯一ID
	CorrelationId string `protobuf:"bytes,5,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"` // 相关请求ID
	From          string `protobuf:"bytes,6,opt,name=from,proto3" json:"from,omitempty"`                                        // 发送者
	To            string `protobuf:"bytes,7,opt,name=to,proto3" json:"to,omitempty"`                                            // 接收者
	Timestamp     int64  `protobuf:"varint,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                             // 毫秒时间戳
	// ---- 负载 ----
	Data          []byte `protobuf:"bytes,9,opt,name=data,proto3" json:"data,omitempty"` // Protobuf 二进制
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Envelope) Reset() {
	*x = Envelope{}
	mi := &file_envelope_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Envelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Envelope) ProtoMessage() {}

func (x *Envelope) ProtoReflect() protoreflect.Message {
	mi := &file_envelope_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Envelope.ProtoReflect.Descriptor instead.
func (*Envelope) Descriptor() ([]byte, []int) {
	return file_envelope_proto_rawDescGZIP(), []int{0}
}

func (x *Envelope) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Envelope) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_MSG_TYPE_UNSPECIFIED
}

func (x *Envelope) GetEncoding() Encoding {
	if x != nil {
		return x.Encoding
	}
	return Encoding_ENCODING_UNSPECIFIED
}

func (x *Envelope) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *Envelope) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *Envelope) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Envelope) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Envelope) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Envelope) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_envelope_proto protoreflect.FileDescriptor

const file_envelope_proto_rawDesc = "" +
	"\n" +
	"\x0eenvelope.proto\x12\x02pb\"\x8f\x02\n" +
	"\bEnvelope\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12#\n" +
	"\x04type\x18\x02 \x01(\x0e2\x0f.pb.MessageTypeR\x04type\x12(\n" +
	"\bencoding\x18\x03 \x01(\x0e2\f.pb.EncodingR\bencoding\x12\x1d\n" +
	"\n" +
	"message_id\x18\x04 \x01(\tR\tmessageId\x12%\n" +
	"\x0ecorrelation_id\x18\x05 \x01(\tR\rcorrelationId\x12\x12\n" +
	"\x04from\x18\x06 \x01(\tR\x04from\x12\x0e\n" +
	"\x02to\x18\a \x01(\tR\x02to\x12\x1c\n" +
	"\ttimestamp\x18\b \x01(\x03R\ttimestamp\x12\x12\n" +
	"\x04data\x18\t \x01(\fR\x04data*c\n" +
	"\bEncoding\x12\x18\n" +
	"\x14ENCODING_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\rENCODING_JSON\x10\x01\x12\x15\n" +
	"\x11ENCODING_PROTOBUF\x10\x02\x12\x13\n" +
	"\x0fENCODING_BINARY\x10\x03*\xb9\x01\n" +
	"\vMessageType\x12\x18\n" +
	"\x14MSG_TYPE_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\rMSG_TYPE_TEXT\x10\x01\x12\x14\n" +
	"\x10MSG_TYPE_COMMAND\x10\x02\x12\x16\n" +
	"\x12MSG_TYPE_FILE_META\x10\x03\x12\x17\n" +
	"\x13MSG_TYPE_FILE_CHUNK\x10\x04\x12\x10\n" +
	"\fMSG_TYPE_ACK\x10\x05\x12\x11\n" +
	"\rMSG_TYPE_PING\x10\x06\x12\x11\n" +
	"\rMSG_TYPE_PONG\x10\aB\x19Z\x17internal/protocol/pb;pbb\x06proto3"

var (
	file_envelope_proto_rawDescOnce sync.Once
	file_envelope_proto_rawDescData []byte
)

func file_envelope_proto_rawDescGZIP() []byte {
	file_envelope_proto_rawDescOnce.Do(func() {
		file_envelope_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envelope_proto_rawDesc), len(file_envelope_proto_rawDesc)))
	})
	return file_envelope_proto_rawDescData
}

var file_envelope_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_envelope_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_envelope_proto_goTypes = []any{
	(Encoding)(0),    // 0: pb.Encoding
	(MessageType)(0), // 1: pb.MessageType
	(*Envelope)(nil), // 2: pb.Envelope
}
var file_envelope_proto_depIdxs = []int32{
	1, // 0: pb.Envelope.type:type_name -> pb.MessageType
	0, // 1: pb.Envelope.encoding:type_name -> pb.Encoding
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_envelope_proto_init() }
func file_envelope_proto_init() {
	if File_envelope_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envelope_proto_rawDesc), len(file_envelope_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envelope_proto_goTypes,
		DependencyIndexes: file_envelope_proto_depIdxs,
		EnumInfos:         file_envelope_proto_enumTypes,
		MessageInfos:      file_envelope_proto_msgTypes,
	}.Build()
	File_envelope_proto = out.File
	file_envelope_proto_goTypes = nil
	file_envelope_proto_depIdxs = nil
}
