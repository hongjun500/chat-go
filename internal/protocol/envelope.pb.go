// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: internal/transport/envelope.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EnvelopeProto 定义了消息的结构
type EnvelopeProto struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`                                                                                  // 协议版本
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`                                                                                        // 消息类型
	Schema        string                 `protobuf:"bytes,3,opt,name=schema,proto3" json:"schema,omitempty"`                                                                                    // 可选的负载模式标识符
	Datacontent   string                 `protobuf:"bytes,4,opt,name=datacontent,proto3" json:"datacontent,omitempty"`                                                                          // 数据内容类型
	Mid           string                 `protobuf:"bytes,5,opt,name=mid,proto3" json:"mid,omitempty"`                                                                                          // 消息ID，用于幂等性
	Correlation   string                 `protobuf:"bytes,6,opt,name=correlation,proto3" json:"correlation,omitempty"`                                                                          // 关联ID
	Causation     string                 `protobuf:"bytes,7,opt,name=causation,proto3" json:"causation,omitempty"`                                                                              // 因果ID
	TraceId       string                 `protobuf:"bytes,8,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`                                                                   // 跟踪ID
	Tenant        string                 `protobuf:"bytes,9,opt,name=tenant,proto3" json:"tenant,omitempty"`                                                                                    // 租户信息
	Conversation  string                 `protobuf:"bytes,10,opt,name=conversation,proto3" json:"conversation,omitempty"`                                                                       // 会话ID
	From          string                 `protobuf:"bytes,11,opt,name=from,proto3" json:"from,omitempty"`                                                                                       // 消息发送者
	To            []string               `protobuf:"bytes,12,rep,name=to,proto3" json:"to,omitempty"`                                                                                           // 消息接收者
	PartitionKey  string                 `protobuf:"bytes,13,opt,name=partition_key,json=partitionKey,proto3" json:"partition_key,omitempty"`                                                   // 分区键
	Ts            int64                  `protobuf:"varint,14,opt,name=ts,proto3" json:"ts,omitempty"`                                                                                          // 时间戳（毫秒）
	TtlMs         int64                  `protobuf:"varint,15,opt,name=ttl_ms,json=ttlMs,proto3" json:"ttl_ms,omitempty"`                                                                       // 生存时间（毫秒）
	ExpiresAt     int64                  `protobuf:"varint,16,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`                                                           // 过期时间戳
	Meta          map[string]string      `protobuf:"bytes,17,rep,name=meta,proto3" json:"meta,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`             // 元数据
	Signature     string                 `protobuf:"bytes,18,opt,name=signature,proto3" json:"signature,omitempty"`                                                                             // 签名
	Encrypted     bool                   `protobuf:"varint,19,opt,name=encrypted,proto3" json:"encrypted,omitempty"`                                                                            // 是否加密
	Priority      int32                  `protobuf:"varint,20,opt,name=priority,proto3" json:"priority,omitempty"`                                                                              // 优先级
	ChunkIndex    int32                  `protobuf:"varint,21,opt,name=chunk_index,json=chunkIndex,proto3" json:"chunk_index,omitempty"`                                                        // 当前分片索引
	TotalChunks   int32                  `protobuf:"varint,22,opt,name=total_chunks,json=totalChunks,proto3" json:"total_chunks,omitempty"`                                                     // 总分片数
	Language      string                 `protobuf:"bytes,23,opt,name=language,proto3" json:"language,omitempty"`                                                                               // 消息语言
	Status        string                 `protobuf:"bytes,24,opt,name=status,proto3" json:"status,omitempty"`                                                                                   // 消息状态
	Payload       []byte                 `protobuf:"bytes,25,opt,name=payload,proto3" json:"payload,omitempty"`                                                                                 // 消息内容
	Data          []byte                 `protobuf:"bytes,26,opt,name=data,proto3" json:"data,omitempty"`                                                                                       // 二进制数据
	Attributes    map[string]string      `protobuf:"bytes,27,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 自定义属性
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnvelopeProto) Reset() {
	*x = EnvelopeProto{}
	mi := &file_internal_transport_envelope_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnvelopeProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvelopeProto) ProtoMessage() {}

func (x *EnvelopeProto) ProtoReflect() protoreflect.Message {
	mi := &file_internal_transport_envelope_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvelopeProto.ProtoReflect.Descriptor instead.
func (*EnvelopeProto) Descriptor() ([]byte, []int) {
	return file_internal_transport_envelope_proto_rawDescGZIP(), []int{0}
}

func (x *EnvelopeProto) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *EnvelopeProto) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *EnvelopeProto) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *EnvelopeProto) GetDatacontent() string {
	if x != nil {
		return x.Datacontent
	}
	return ""
}

func (x *EnvelopeProto) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

func (x *EnvelopeProto) GetCorrelation() string {
	if x != nil {
		return x.Correlation
	}
	return ""
}

func (x *EnvelopeProto) GetCausation() string {
	if x != nil {
		return x.Causation
	}
	return ""
}

func (x *EnvelopeProto) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *EnvelopeProto) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *EnvelopeProto) GetConversation() string {
	if x != nil {
		return x.Conversation
	}
	return ""
}

func (x *EnvelopeProto) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *EnvelopeProto) GetTo() []string {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *EnvelopeProto) GetPartitionKey() string {
	if x != nil {
		return x.PartitionKey
	}
	return ""
}

func (x *EnvelopeProto) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *EnvelopeProto) GetTtlMs() int64 {
	if x != nil {
		return x.TtlMs
	}
	return 0
}

func (x *EnvelopeProto) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *EnvelopeProto) GetMeta() map[string]string {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *EnvelopeProto) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *EnvelopeProto) GetEncrypted() bool {
	if x != nil {
		return x.Encrypted
	}
	return false
}

func (x *EnvelopeProto) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *EnvelopeProto) GetChunkIndex() int32 {
	if x != nil {
		return x.ChunkIndex
	}
	return 0
}

func (x *EnvelopeProto) GetTotalChunks() int32 {
	if x != nil {
		return x.TotalChunks
	}
	return 0
}

func (x *EnvelopeProto) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *EnvelopeProto) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *EnvelopeProto) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *EnvelopeProto) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *EnvelopeProto) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

var File_internal_transport_envelope_proto protoreflect.FileDescriptor

const file_internal_transport_envelope_proto_rawDesc = "" +
	"\n" +
	"!internal/transport/envelope.proto\x12\ttransport\"\xa7\a\n" +
	"\rEnvelopeProto\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x16\n" +
	"\x06schema\x18\x03 \x01(\tR\x06schema\x12 \n" +
	"\vdatacontent\x18\x04 \x01(\tR\vdatacontent\x12\x10\n" +
	"\x03mid\x18\x05 \x01(\tR\x03mid\x12 \n" +
	"\vcorrelation\x18\x06 \x01(\tR\vcorrelation\x12\x1c\n" +
	"\tcausation\x18\a \x01(\tR\tcausation\x12\x19\n" +
	"\btrace_id\x18\b \x01(\tR\atraceId\x12\x16\n" +
	"\x06tenant\x18\t \x01(\tR\x06tenant\x12\"\n" +
	"\fconversation\x18\n" +
	" \x01(\tR\fconversation\x12\x12\n" +
	"\x04from\x18\v \x01(\tR\x04from\x12\x0e\n" +
	"\x02to\x18\f \x03(\tR\x02to\x12#\n" +
	"\rpartition_key\x18\r \x01(\tR\fpartitionKey\x12\x0e\n" +
	"\x02ts\x18\x0e \x01(\x03R\x02ts\x12\x15\n" +
	"\x06ttl_ms\x18\x0f \x01(\x03R\x05ttlMs\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x10 \x01(\x03R\texpiresAt\x126\n" +
	"\x04meta\x18\x11 \x03(\v2\".transport.EnvelopeProto.MetaEntryR\x04meta\x12\x1c\n" +
	"\tsignature\x18\x12 \x01(\tR\tsignature\x12\x1c\n" +
	"\tencrypted\x18\x13 \x01(\bR\tencrypted\x12\x1a\n" +
	"\bpriority\x18\x14 \x01(\x05R\bpriority\x12\x1f\n" +
	"\vchunk_index\x18\x15 \x01(\x05R\n" +
	"chunkIndex\x12!\n" +
	"\ftotal_chunks\x18\x16 \x01(\x05R\vtotalChunks\x12\x1a\n" +
	"\blanguage\x18\x17 \x01(\tR\blanguage\x12\x16\n" +
	"\x06status\x18\x18 \x01(\tR\x06status\x12\x18\n" +
	"\apayload\x18\x19 \x01(\fR\apayload\x12\x12\n" +
	"\x04data\x18\x1a \x01(\fR\x04data\x12H\n" +
	"\n" +
	"attributes\x18\x1b \x03(\v2(.transport.EnvelopeProto.AttributesEntryR\n" +
	"attributes\x1a7\n" +
	"\tMetaEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x1eZ\x1cinternal/transport;transportb\x06proto3"

var (
	file_internal_transport_envelope_proto_rawDescOnce sync.Once
	file_internal_transport_envelope_proto_rawDescData []byte
)

func file_internal_transport_envelope_proto_rawDescGZIP() []byte {
	file_internal_transport_envelope_proto_rawDescOnce.Do(func() {
		file_internal_transport_envelope_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_internal_transport_envelope_proto_rawDesc), len(file_internal_transport_envelope_proto_rawDesc)))
	})
	return file_internal_transport_envelope_proto_rawDescData
}

var file_internal_transport_envelope_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_internal_transport_envelope_proto_goTypes = []any{
	(*EnvelopeProto)(nil), // 0: transport.EnvelopeProto
	nil,                   // 1: transport.EnvelopeProto.MetaEntry
	nil,                   // 2: transport.EnvelopeProto.AttributesEntry
}
var file_internal_transport_envelope_proto_depIdxs = []int32{
	1, // 0: transport.EnvelopeProto.meta:type_name -> transport.EnvelopeProto.MetaEntry
	2, // 1: transport.EnvelopeProto.attributes:type_name -> transport.EnvelopeProto.AttributesEntry
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_internal_transport_envelope_proto_init() }
func file_internal_transport_envelope_proto_init() {
	if File_internal_transport_envelope_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internal_transport_envelope_proto_rawDesc), len(file_internal_transport_envelope_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_transport_envelope_proto_goTypes,
		DependencyIndexes: file_internal_transport_envelope_proto_depIdxs,
		MessageInfos:      file_internal_transport_envelope_proto_msgTypes,
	}.Build()
	File_internal_transport_envelope_proto = out.File
	file_internal_transport_envelope_proto_goTypes = nil
	file_internal_transport_envelope_proto_depIdxs = nil
}
